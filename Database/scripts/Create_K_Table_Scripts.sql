
/* Script for K_DATASET table */	
CREATE TABLE CADDIS_DEV.K_DATASET
(
   DATASET_ID               NUMBER (11) NOT NULL,
   CITATION_ID              NUMBER (11) NOT NULL,
   LL_SOURCE_DATA_ID        NUMBER (11),
   LL_STUDY_TYPE_ID         NUMBER (11) NOT NULL,
   LL_STUDY_DESIGN_ID       NUMBER (11),
   LL_SAMPLE_SELECTION_ID   NUMBER (11),
   STUDYDETAILS             VARCHAR2 (4000 BYTE),
   CONTROL_SAMPLES          NUMBER (11),
   CONTROL_REPLICATES       NUMBER (11),
   IMPACT_SAMPLE            NUMBER (11),
   IMPACT_REPLICATES        NUMBER (11),
   MIN_LATITUDE             NUMBER (10, 8),
   MAX_LATITUDE             NUMBER (10, 8),
   MIN_LONG                 NUMBER (10, 8),
   MAX_LONG                 NUMBER (10, 8),
   MAX_ELEVATION            NUMBER (11, 7),
   MIN_ELEVATION            NUMBER (11, 7),
   LL_ELEVATION_UNIT_ID     NUMBER (11),
   GEOMETRY                 VARCHAR2 (50 BYTE),
   LL_HABITAT_ID            NUMBER (11),
   LL_CLIMATE_ID            NUMBER (11),
   LL_SPATIAL_EXTENT_ID     NUMBER (11),
   LL_TEMPORAL_EXTENT_ID    NUMBER (11),
   LOCATION_COMMENT         VARCHAR2 (4000 CHAR),
   CREATE_DATE              DATE,
   CREATE_USER              VARCHAR2 (50 BYTE),
   UPDATE_DATE              DATE,
   UPDATE_USER              VARCHAR2 (50 BYTE)
)
TABLESPACE CADDIS_DATA
PCTUSED 0
PCTFREE 10
INITRANS 1
MAXTRANS 255
STORAGE (INITIAL 128 K
         NEXT 1 M
         MINEXTENTS 1
         MAXEXTENTS UNLIMITED
         PCTINCREASE 0
         BUFFER_POOL DEFAULT)
LOGGING
NOCOMPRESS
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE CADDIS_DEV.K_DATASET IS 'This stores a Dataset. A dataset is a unique collection of exposure sample units, and all the measurements made on those sample units.';

COMMENT ON COLUMN CADDIS_DEV.K_DATASET.DATASET_ID IS 'System generated identifier of a Dataset. A dataset is a unique collection of exposure sample units, and all the measurements made on those sample units.';

COMMENT ON COLUMN CADDIS_DEV.K_DATASET.CITATION_ID IS 'REQUIRED. Links the Study Design record to the appropriate Citation. Refers back to the Citation record identified as CITATION_ID in the Table P_CITATION';

COMMENT ON COLUMN CADDIS_DEV.K_DATASET.LL_STUDY_TYPE_ID IS 'REQUIRED. Choose from Observational Field Study, Natural Experiment, or Manipulated Experiment: Field/Lab/Mesocosm';

COMMENT ON COLUMN CADDIS_DEV.K_DATASET.LL_HABITAT_ID IS 'Habitat info,  the foreign key from P_LIST_ITEM table.';

COMMENT ON COLUMN CADDIS_DEV.K_DATASET.STUDYDETAILS IS 'Season/index period/timing of study.';

COMMENT ON COLUMN CADDIS_DEV.K_DATASET.CREATE_DATE IS 'The date the record was created';

COMMENT ON COLUMN CADDIS_DEV.K_DATASET.CREATE_USER IS 'The user that created the record';

COMMENT ON COLUMN CADDIS_DEV.K_DATASET.UPDATE_DATE IS 'The date the record was last updated';

COMMENT ON COLUMN CADDIS_DEV.K_DATASET.UPDATE_USER IS 'The user that performed the last update';

CREATE UNIQUE INDEX PK_K_DATASET
   ON CADDIS_DEV.K_DATASET (DATASET_ID)
   LOGGING
   TABLESPACE CADDIS_INDEX
   PCTFREE 10
   INITRANS 2
   MAXTRANS 255
   STORAGE (INITIAL 64 K
            NEXT 1 M
            MINEXTENTS 1
            MAXEXTENTS UNLIMITED
            PCTINCREASE 0
            BUFFER_POOL DEFAULT)
   NOPARALLEL;

CREATE INDEX K_DATASET_C_I
   ON CADDIS_DEV.K_DATASET (CITATION_ID)
   LOGGING
   TABLESPACE CADDIS_INDEX
   PCTFREE 10
   INITRANS 2
   MAXTRANS 255
   STORAGE (INITIAL 64 K
            NEXT 1 M
            MINEXTENTS 1
            MAXEXTENTS UNLIMITED
            PCTINCREASE 0
            BUFFER_POOL DEFAULT)
   NOPARALLEL;

CREATE INDEX K_DATASET_LL_ST_I
   ON CADDIS_DEV.K_DATASET (LL_STUDY_TYPE_ID)
   LOGGING
   TABLESPACE CADDIS_INDEX
   PCTFREE 10
   INITRANS 2
   MAXTRANS 255
   STORAGE (INITIAL 64 K
            NEXT 1 M
            MINEXTENTS 1
            MAXEXTENTS UNLIMITED
            PCTINCREASE 0
            BUFFER_POOL DEFAULT)
   NOPARALLEL;

CREATE INDEX K_DATASET_LL_WT_I
   ON CADDIS_DEV.K_DATASET (LL_HABITAT_ID)
   LOGGING
   TABLESPACE CADDIS_INDEX
   PCTFREE 10
   INITRANS 2
   MAXTRANS 255
   STORAGE (INITIAL 64 K
            NEXT 1 M
            MINEXTENTS 1
            MAXEXTENTS UNLIMITED
            PCTINCREASE 0
            BUFFER_POOL DEFAULT)
   NOPARALLEL;

ALTER TABLE CADDIS_DEV.K_DATASET ADD (CONSTRAINT PK_K_DATASET PRIMARY KEY (DATASET_ID) USING INDEX PK_K_DATASET);

ALTER TABLE CADDIS_DEV.K_DATASET ADD (
	CONSTRAINT FK_CITATION_R_K_DS FOREIGN KEY (CITATION_ID) REFERENCES CADDIS_DEV.P_CITATION(CITATION_ID)
	,CONSTRAINT FK_K_DS_LL_CLIMATE_ID FOREIGN KEY (LL_CLIMATE_ID) REFERENCES CADDIS_DEV.P_LIST_ITEM(LL_ID) ON DELETE SET NULL
	,CONSTRAINT FK_K_DS_LL_SAMPLE_SELECT_ID FOREIGN KEY (LL_SAMPLE_SELECTION_ID) REFERENCES CADDIS_DEV.P_LIST_ITEM(LL_ID) ON DELETE SET NULL
	,CONSTRAINT FK_K_DS_LL_SOURCE_DATA_ID FOREIGN KEY (LL_SOURCE_DATA_ID) REFERENCES CADDIS_DEV.P_LIST_ITEM(LL_ID) ON DELETE SET NULL
	,CONSTRAINT FK_K_DS_LL_SPATIAL_EXTEN_ID FOREIGN KEY (LL_SPATIAL_EXTENT_ID) REFERENCES CADDIS_DEV.P_LIST_ITEM(LL_ID) ON DELETE SET NULL
	,CONSTRAINT FK_K_DS_LL_STD_DESIGN_ID FOREIGN KEY (LL_STUDY_DESIGN_ID) REFERENCES CADDIS_DEV.P_LIST_ITEM(LL_ID) ON DELETE SET NULL
	,CONSTRAINT FK_K_DS_LL_TEMP_EXTENT_ID FOREIGN KEY (LL_TEMPORAL_EXTENT_ID) REFERENCES CADDIS_DEV.P_LIST_ITEM(LL_ID) ON DELETE SET NULL
	,CONSTRAINT FK_K_DS_LL_HABITAT_ID FOREIGN KEY (LL_HABITAT_ID) REFERENCES CADDIS_DEV.P_LIST_ITEM(LL_ID) ON DELETE SET NULL
	);
	
/* Script for K_LOCATION table */	
CREATE TABLE CADDIS_DEV.K_LOCATION
(
   LL_LOCATION_ID      NUMBER (11) NOT NULL,
   DATASET_ID          NUMBER (11) NOT NULL,
   CREATE_DATE         DATE,
   CREATE_USER         VARCHAR2 (50 CHAR),
   UPDATE_DATE         DATE,
   UPDATE_USER         VARCHAR2 (50 BYTE),
   LOC_TEXT            VARCHAR2 (100 BYTE),
   LL_TYPE_ENTITY_ID   NUMBER (11)
)
TABLESPACE CADDIS_DATA
PCTUSED 0
PCTFREE 10
INITRANS 1
MAXTRANS 255
STORAGE (INITIAL 64 K
         NEXT 1 M
         MINEXTENTS 1
         MAXEXTENTS UNLIMITED
         PCTINCREASE 0
         BUFFER_POOL DEFAULT)
LOGGING
NOCOMPRESS
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE CADDIS_DEV.K_LOCATION IS 'This stores the location information of the dataset.';

COMMENT ON COLUMN CADDIS_DEV.K_LOCATION.LL_LOCATION_ID IS 'Location id. Refers back to the List Item record identified as LL_ID in the Table P_LIST_ITEM';

COMMENT ON COLUMN CADDIS_DEV.K_LOCATION.DATASET_ID IS 'Refers back to the Dataset record identified as DATASET_ID in the Table P_DATASET';

COMMENT ON COLUMN CADDIS_DEV.K_LOCATION.CREATE_DATE IS 'The date the record was created';

COMMENT ON COLUMN CADDIS_DEV.K_LOCATION.CREATE_USER IS 'The user that created the record';

COMMENT ON COLUMN CADDIS_DEV.K_LOCATION.UPDATE_DATE IS 'The date the record was last updated';

COMMENT ON COLUMN CADDIS_DEV.K_LOCATION.UPDATE_USER IS 'The user that performed the last update';

COMMENT ON COLUMN CADDIS_DEV.K_LOCATION.LOC_TEXT IS 'Text identifying the location';


CREATE UNIQUE INDEX PK_K_LOCATION ON CADDIS_DEV.K_LOCATION (LL_LOCATION_ID, DATASET_ID) LOGGING TABLESPACE CADDIS_INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 STORAGE ( INITIAL 64K NEXT 1M MINEXTENTS 1 MAXEXTENTS UNLIMITED PCTINCREASE 0 BUFFER_POOL DEFAULT ) NOPARALLEL;


CREATE INDEX K_LOCATION_D_I ON CADDIS_DEV.K_LOCATION (DATASET_ID) LOGGING TABLESPACE CADDIS_INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 STORAGE ( INITIAL 64K NEXT 1M MINEXTENTS 1 MAXEXTENTS UNLIMITED PCTINCREASE 0 BUFFER_POOL DEFAULT ) NOPARALLEL;


ALTER TABLE CADDIS_DEV.K_LOCATION ADD (  CONSTRAINT PK_K_LOCATION PRIMARY KEY (LL_LOCATION_ID, DATASET_ID) USING INDEX PK_K_LOCATION);

ALTER TABLE CADDIS_DEV.K_LOCATION ADD (
	CONSTRAINT FK_K_DS_R_LOCATION FOREIGN KEY (DATASET_ID) REFERENCES CADDIS_DEV.K_DATASET(DATASET_ID)
	,CONSTRAINT FK_TYPE_ENTITY_R_K_LOCATION FOREIGN KEY (LL_TYPE_ENTITY_ID) REFERENCES CADDIS_DEV.P_TYPE_ENTITY_NAME(TYPE_ENTITY_ID)
	);

/* Script for K_CAUSE_EFFECT table */	
CREATE TABLE CADDIS_DEV.K_CAUSE_EFFECT
(
   CAUSE_EFFECT_ID           NUMBER (12) NOT NULL,
   EFFECT_ID                 NUMBER (12) NOT NULL,
   CAUSE_ID                  NUMBER (12) NOT NULL,
   LL_CAUSE_TRAJECTORY_ID    NUMBER (11),
   LL_CAUSE_MEASURED_ID      NUMBER (11),
   LL_EFFECT_TRAJECTORY_ID   NUMBER (11),
   LL_EFFECT_MEASURED_ID     NUMBER (11),
   CREATE_DATE               DATE NOT NULL,
   CREATE_USER               VARCHAR2 (50 CHAR) NOT NULL,
   UPDATE_DATE               DATE,
   UPDATE_USER               VARCHAR2 (50 CHAR),
   DATASET_ID                NUMBER (11) NOT NULL,
   CAUSE_COMMENT             VARCHAR2 (4000 BYTE),
   EFFECT_COMMENT            VARCHAR2 (4000 BYTE),
   LINKAGE_COMMENT           VARCHAR2 (4000 BYTE),
   EVIDENCE_DOCUMENTATION  VARCHAR2(4000 BYTE)
)
TABLESPACE CADDIS_DATA
PCTUSED 0
PCTFREE 10
INITRANS 1
MAXTRANS 255
STORAGE (INITIAL 64 K
         NEXT 1 M
         MINEXTENTS 1
         MAXEXTENTS UNLIMITED
         PCTINCREASE 0
         BUFFER_POOL DEFAULT)
LOGGING
NOCOMPRESS
NOCACHE
NOPARALLEL
MONITORING;

CREATE INDEX FK_K_CA_EFF_CAUSE_ID
   ON CADDIS_DEV.K_CAUSE_EFFECT (CAUSE_ID)
   LOGGING
   TABLESPACE CADDIS_DATA
   PCTFREE 10
   INITRANS 2
   MAXTRANS 255
   STORAGE (INITIAL 64 K
            NEXT 1 M
            MINEXTENTS 1
            MAXEXTENTS UNLIMITED
            PCTINCREASE 0
            BUFFER_POOL DEFAULT)
   NOPARALLEL;


CREATE INDEX FK_K_CA_EFF_CAUSE_MEASURE_ID
   ON CADDIS_DEV.K_CAUSE_EFFECT (LL_CAUSE_MEASURED_ID)
   LOGGING
   TABLESPACE CADDIS_DATA
   PCTFREE 10
   INITRANS 2
   MAXTRANS 255
   STORAGE (INITIAL 64 K
            NEXT 1 M
            MINEXTENTS 1
            MAXEXTENTS UNLIMITED
            PCTINCREASE 0
            BUFFER_POOL DEFAULT)
   NOPARALLEL;


CREATE INDEX FK_K_CA_EFF_CAUSE_TRAJECTOR_ID
   ON CADDIS_DEV.K_CAUSE_EFFECT (LL_CAUSE_TRAJECTORY_ID)
   LOGGING
   TABLESPACE CADDIS_DATA
   PCTFREE 10
   INITRANS 2
   MAXTRANS 255
   STORAGE (INITIAL 64 K
            NEXT 1 M
            MINEXTENTS 1
            MAXEXTENTS UNLIMITED
            PCTINCREASE 0
            BUFFER_POOL DEFAULT)
   NOPARALLEL;


CREATE INDEX FK_K_CA_EFF_DATASET_ID
   ON CADDIS_DEV.K_CAUSE_EFFECT (DATASET_ID)
   LOGGING
   TABLESPACE CADDIS_DATA
   PCTFREE 10
   INITRANS 2
   MAXTRANS 255
   STORAGE (INITIAL 64 K
            NEXT 1 M
            MINEXTENTS 1
            MAXEXTENTS UNLIMITED
            PCTINCREASE 0
            BUFFER_POOL DEFAULT)
   NOPARALLEL;


CREATE INDEX FK_K_CA_EFF_EFFECT_ID
   ON CADDIS_DEV.K_CAUSE_EFFECT (EFFECT_ID)
   LOGGING
   TABLESPACE CADDIS_DATA
   PCTFREE 10
   INITRANS 2
   MAXTRANS 255
   STORAGE (INITIAL 64 K
            NEXT 1 M
            MINEXTENTS 1
            MAXEXTENTS UNLIMITED
            PCTINCREASE 0
            BUFFER_POOL DEFAULT)
   NOPARALLEL;


CREATE INDEX FK_K_CA_EFF_EFFECT_MEASURED_ID
   ON CADDIS_DEV.K_CAUSE_EFFECT (LL_EFFECT_MEASURED_ID)
   LOGGING
   TABLESPACE CADDIS_DATA
   PCTFREE 10
   INITRANS 2
   MAXTRANS 255
   STORAGE (INITIAL 64 K
            NEXT 1 M
            MINEXTENTS 1
            MAXEXTENTS UNLIMITED
            PCTINCREASE 0
            BUFFER_POOL DEFAULT)
   NOPARALLEL;


CREATE INDEX FK_K_CA_EFF_EFFECT_TRAJECTO_ID
   ON CADDIS_DEV.K_CAUSE_EFFECT (LL_EFFECT_TRAJECTORY_ID)
   LOGGING
   TABLESPACE CADDIS_DATA
   PCTFREE 10
   INITRANS 2
   MAXTRANS 255
   STORAGE (INITIAL 64 K
            NEXT 1 M
            MINEXTENTS 1
            MAXEXTENTS UNLIMITED
            PCTINCREASE 0
            BUFFER_POOL DEFAULT)
   NOPARALLEL;
   

CREATE UNIQUE INDEX PK_K_CAUSE_EFFECT
   ON CADDIS_DEV.K_CAUSE_EFFECT (CAUSE_EFFECT_ID)
   LOGGING
   TABLESPACE CADDIS_DATA
   PCTFREE 10
   INITRANS 2
   MAXTRANS 255
   STORAGE (INITIAL 64 K
            NEXT 1 M
            MINEXTENTS 1
            MAXEXTENTS UNLIMITED
            PCTINCREASE 0
            BUFFER_POOL DEFAULT)
   NOPARALLEL;


CREATE UNIQUE INDEX UX_K_CAUSE_EFFECT
   ON CADDIS_DEV.K_CAUSE_EFFECT (DATASET_ID,
                      CAUSE_ID,
                      EFFECT_ID,
                      LL_CAUSE_MEASURED_ID,
                      LL_EFFECT_MEASURED_ID,
                      LL_CAUSE_TRAJECTORY_ID,
                      LL_EFFECT_TRAJECTORY_ID)
   LOGGING
   TABLESPACE CADDIS_DATA
   PCTFREE 10
   INITRANS 2
   MAXTRANS 255
   STORAGE (INITIAL 64 K
            NEXT 1 M
            MINEXTENTS 1
            MAXEXTENTS UNLIMITED
            PCTINCREASE 0
            BUFFER_POOL DEFAULT)
   NOPARALLEL;
   
ALTER TABLE CADDIS_DEV.K_CAUSE_EFFECT ADD (
	CONSTRAINT PK_K_CAUSE_EFFECT PRIMARY KEY (CAUSE_EFFECT_ID) USING INDEX PK_K_CAUSE_EFFECT
	,CONSTRAINT UX_K_CAUSE_EFFECT UNIQUE (
		DATASET_ID
		,CAUSE_ID
		,EFFECT_ID
		,LL_CAUSE_MEASURED_ID
		,LL_EFFECT_MEASURED_ID
		,LL_CAUSE_TRAJECTORY_ID
		,LL_EFFECT_TRAJECTORY_ID
		) USING INDEX UX_K_CAUSE_EFFECT
	);

ALTER TABLE CADDIS_DEV.K_CAUSE_EFFECT ADD (
	CONSTRAINT FK_K_CAUSE_EFFECT_CAUSE_ID FOREIGN KEY (CAUSE_ID) REFERENCES CADDIS_DEV.P_STANDARD_TERM(STANDARD_TERM_ID)
	,CONSTRAINT FK_K_CAUSE_EFFECT_C_TRAJECT_ID FOREIGN KEY (LL_CAUSE_TRAJECTORY_ID) REFERENCES CADDIS_DEV.P_LIST_ITEM(LL_ID) ON DELETE SET NULL
	,CONSTRAINT FK_K_CAUSE_EFFECT_DATASET_ID FOREIGN KEY (DATASET_ID) REFERENCES CADDIS_DEV.K_DATASET(DATASET_ID)
	,CONSTRAINT FK_K_CAUSE_EFFECT_EFFECT_ID FOREIGN KEY (EFFECT_ID) REFERENCES CADDIS_DEV.P_STANDARD_TERM(STANDARD_TERM_ID)
	,CONSTRAINT FK_K_CAUSE_EFFECT_EFFE_MEAS_ID FOREIGN KEY (LL_EFFECT_MEASURED_ID) REFERENCES CADDIS_DEV.P_LIST_ITEM(LL_ID) ON DELETE SET NULL
	,CONSTRAINT FK_K_CAUSE_EFFECT_EFFE_TRAJ_ID FOREIGN KEY (LL_EFFECT_TRAJECTORY_ID) REFERENCES CADDIS_DEV.P_LIST_ITEM(LL_ID) ON DELETE SET NULL
	,CONSTRAINT FK_K_CAUSE_EFFECT_MEASURED_ID FOREIGN KEY (LL_CAUSE_MEASURED_ID) REFERENCES CADDIS_DEV.P_LIST_ITEM(LL_ID) ON DELETE SET NULL
	);
	
CREATE OR REPLACE TRIGGER "K_CAUSE_EFFECT_T1"
   BEFORE INSERT OR UPDATE
   ON "K_CAUSE_EFFECT"
   REFERENCING OLD AS "OLD" NEW AS "NEW"
   FOR EACH ROW
BEGIN
   BEGIN
      IF INSERTING
      THEN
         :NEW.CREATE_DATE := SYSDATE;
         :NEW.CREATE_USER := NVL (v ('APP_USER'), USER);
      END IF;

      IF UPDATING
      THEN
         :NEW.UPDATE_DATE := SYSDATE;
         :NEW.UPDATE_USER := NVL (v ('APP_USER'), USER);
      END IF;
   END;
END;

/* Script for K_ANALYSIS_DETAILS table */
CREATE TABLE K_ANALYSIS_DETAILS
(
   ANALYSIS_DETAILS_ID            NUMBER (11) NOT NULL,
   P_LEVEL                        VARCHAR2 (50 BYTE),
   STATUS_COMMENT                 VARCHAR2 (4000 BYTE),
   CREATE_DATE                    DATE,
   CREATE_USER                    VARCHAR2 (50 BYTE),
   UPDATE_DATE                    DATE,
   UPDATE_USER                    VARCHAR2 (50 BYTE),
   CAUSE_EFFECT_ID                NUMBER (12) NOT NULL,
   LL_RESPONSE_STRENGTH_ID        NUMBER (11),
   LL_RESPONSE_FORM_ID            NUMBER (11),
   EVIDENCE_OF_CAUSE              VARCHAR2 (1 CHAR) DEFAULT 'N',
   RESPONSE_EQUATION              VARCHAR2 (250 BYTE)
)
TABLESPACE CADDIS_DATA
PCTUSED 0
PCTFREE 10
INITRANS 1
MAXTRANS 255
STORAGE (INITIAL 64 K
         NEXT 1 M
         MINEXTENTS 1
         MAXEXTENTS UNLIMITED
         PCTINCREASE 0
         BUFFER_POOL DEFAULT)
LOGGING
NOCOMPRESS
NOCACHE
NOPARALLEL
MONITORING;


CREATE UNIQUE INDEX PK_K_ANALYSIS_DETAILS
   ON K_ANALYSIS_DETAILS (ANALYSIS_DETAILS_ID)
   LOGGING
   TABLESPACE CADDIS_DATA
   PCTFREE 10
   INITRANS 2
   MAXTRANS 255
   STORAGE (INITIAL 64 K
            NEXT 1 M
            MINEXTENTS 1
            MAXEXTENTS UNLIMITED
            PCTINCREASE 0
            BUFFER_POOL DEFAULT)
   NOPARALLEL;

CREATE OR REPLACE TRIGGER "K_ANALYSIS_DETAILS_T1"
   BEFORE INSERT OR UPDATE
   ON "K_ANALYSIS_DETAILS"
   REFERENCING OLD AS "OLD" NEW AS "NEW"
   FOR EACH ROW
BEGIN
   BEGIN
      IF INSERTING
      THEN
         :NEW.CREATE_DATE := SYSDATE;
         :NEW.CREATE_USER := NVL (v ('APP_USER'), USER);
      END IF;

      IF UPDATING
      THEN
         :NEW.UPDATE_DATE := SYSDATE;
         :NEW.UPDATE_USER := NVL (v ('APP_USER'), USER);
      END IF;
   END;
END;
/

ALTER TABLE K_ANALYSIS_DETAILS ADD (
	CONSTRAINT C01_K_EVIDENCE_OF_CAUSE_YN CHECK (
		EVIDENCE_OF_CAUSE IN (
			'Y'
			,'N'
			)
		)
	,CONSTRAINT PK_K_ANALYSIS_DETAILS PRIMARY KEY (ANALYSIS_DETAILS_ID) USING INDEX PK_K_ANALYSIS_DETAILS
	);

ALTER TABLE K_ANALYSIS_DETAILS ADD (
    CONSTRAINT FK_K_ANALS_DET_RESP_FORM_ID FOREIGN KEY (LL_RESPONSE_FORM_ID) REFERENCES P_LIST_ITEM(LL_ID) ON DELETE SET NULL
    ,CONSTRAINT FK_K_ANALYS_DET_R_RESP_ID FOREIGN KEY (LL_RESPONSE_STRENGTH_ID) REFERENCES P_LIST_ITEM(LL_ID) ON DELETE SET NULL
    ,CONSTRAINT FK_K_ANALYS_DETAILS_CS_EF_ID FOREIGN KEY (CAUSE_EFFECT_ID) REFERENCES K_CAUSE_EFFECT(CAUSE_EFFECT_ID) ON DELETE SET NULL
    );
	
/*
DROP SEQUENCE SEQ_K_DATASET_ID;
DROP SEQUENCE SEQ_K_LOCATION_ID;
DROP SEQUENCE SEQ_K_CAUSE_EFFECT_ID;
DROP SEQUENCE SEQ_K_ANALYSIS_DETAILS_ID;
*/
	
/* Create new sequences */
CREATE SEQUENCE SEQ_K_DATASET_ID
   START WITH 1
   MAXVALUE 999999999999999999999999999
   MINVALUE 1
   NOCYCLE
   NOCACHE
   NOORDER;

CREATE SEQUENCE SEQ_K_LOCATION_ID
   START WITH 1
   MAXVALUE 999999999999999999999999999
   MINVALUE 1
   NOCYCLE
   NOCACHE
   NOORDER;

CREATE SEQUENCE SEQ_K_CAUSE_EFFECT_ID
   START WITH 1
   MAXVALUE 9999999999999999999999999999
   MINVALUE 1
   NOCYCLE
   NOCACHE
   NOORDER;
   
CREATE SEQUENCE SEQ_K_ANALYSIS_DETAILS_ID
   START WITH 1
   MAXVALUE 999999999999999999999999
   MINVALUE 1
   NOCYCLE
   NOCACHE
   NOORDER;